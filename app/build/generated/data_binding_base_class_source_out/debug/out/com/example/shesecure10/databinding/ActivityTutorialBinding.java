// Generated by view binder compiler. Do not edit!
package com.example.shesecure10.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shesecure10.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTutorialBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView articlesCard;

  @NonNull
  public final CardView immediateTipsCard;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final CardView videosCard;

  private ActivityTutorialBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView articlesCard, @NonNull CardView immediateTipsCard,
      @NonNull LinearLayout linearLayout, @NonNull CardView videosCard) {
    this.rootView = rootView;
    this.articlesCard = articlesCard;
    this.immediateTipsCard = immediateTipsCard;
    this.linearLayout = linearLayout;
    this.videosCard = videosCard;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTutorialBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTutorialBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_tutorial, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTutorialBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.articlesCard;
      CardView articlesCard = ViewBindings.findChildViewById(rootView, id);
      if (articlesCard == null) {
        break missingId;
      }

      id = R.id.immediateTipsCard;
      CardView immediateTipsCard = ViewBindings.findChildViewById(rootView, id);
      if (immediateTipsCard == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.videosCard;
      CardView videosCard = ViewBindings.findChildViewById(rootView, id);
      if (videosCard == null) {
        break missingId;
      }

      return new ActivityTutorialBinding((ConstraintLayout) rootView, articlesCard,
          immediateTipsCard, linearLayout, videosCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
